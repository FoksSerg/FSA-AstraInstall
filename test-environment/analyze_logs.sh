#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ª–æ–≥–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ winetricks

echo "=== –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ª–æ–≥–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ==="
echo ""

# –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ª–æ–≥-—Ñ–∞–π–ª—ã
LOG_FILES=$(ls -t *.log 2>/dev/null)

if [ -z "${LOG_FILES}" ]; then
    echo "‚ùå –õ–æ–≥-—Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
    echo "–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã:"
    echo "  ./quick_test.sh"
    echo "  ./test_minimal_winetricks.sh"
    exit 1
fi

echo "–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ª–æ–≥-—Ñ–∞–π–ª—ã:"
for log in ${LOG_FILES}; do
    echo "  - ${log} ($(stat -c %y "${log}" 2>/dev/null || stat -f %Sm "${log}" 2>/dev/null))"
done
echo ""

# –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ª–æ–≥
LATEST_LOG=$(echo "${LOG_FILES}" | head -1)
echo "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º: ${LATEST_LOG}"
echo ""

# –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
echo "=== –°–≤–æ–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ==="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
if grep -q "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω" "${LATEST_LOG}"; then
    echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å: OK"
else
    echo "‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—Å: –û–®–ò–ë–ö–ê"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
SIZE_INFO=$(grep "–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤" "${LATEST_LOG}" | tail -1)
if [ -n "${SIZE_INFO}" ]; then
    echo "‚úÖ –†–∞–∑–º–µ—Ä: ${SIZE_INFO}"
else
    echo "‚ùå –†–∞–∑–º–µ—Ä: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
FUNC_COUNT=$(grep "–ù–∞–π–¥–µ–Ω–æ —Ñ—É–Ω–∫—Ü–∏–π:" "${LATEST_LOG}" | tail -1 | grep -o '[0-9]*')
if [ -n "${FUNC_COUNT}" ]; then
    echo "‚úÖ –§—É–Ω–∫—Ü–∏–∏: ${FUNC_COUNT} –Ω–∞–π–¥–µ–Ω–æ"
else
    echo "‚ùå –§—É–Ω–∫—Ü–∏–∏: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
echo ""
echo "=== –°—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ ==="
COMPONENTS=("dotnet48" "vcrun2013" "vcrun2022" "d3dcompiler_43" "d3dcompiler_47" "dxvk")
for comp in "${COMPONENTS[@]}"; do
    if grep -q "‚úÖ ${comp}" "${LATEST_LOG}"; then
        echo "‚úÖ ${comp}: OK"
    else
        echo "‚ùå ${comp}: –û–®–ò–ë–ö–ê"
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo ""
echo "=== –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ==="
if grep -q "‚úÖ Wine –Ω–∞–π–¥–µ–Ω" "${LATEST_LOG}"; then
    WINE_VERSION=$(grep "‚úÖ Wine –Ω–∞–π–¥–µ–Ω:" "${LATEST_LOG}" | tail -1)
    echo "‚úÖ ${WINE_VERSION}"
else
    echo "‚ùå Wine: –ù–ï –ù–ê–ô–î–ï–ù"
fi

if grep -q "‚úÖ wget –Ω–∞–π–¥–µ–Ω" "${LATEST_LOG}"; then
    echo "‚úÖ wget: OK"
else
    echo "‚ùå wget: –ù–ï –ù–ê–ô–î–ï–ù"
fi

if grep -q "‚úÖ curl –Ω–∞–π–¥–µ–Ω" "${LATEST_LOG}"; then
    echo "‚úÖ curl: OK"
else
    echo "‚ùå curl: –ù–ï –ù–ê–ô–î–ï–ù"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
echo ""
echo "=== –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ==="
if grep -q "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:" "${LATEST_LOG}"; then
    echo "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º:"
    grep -A 5 "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:" "${LATEST_LOG}" | grep -E "(‚úÖ|‚ùå)" | while read line; do
        echo "  ${line}"
    done
else
    echo "‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª–æ—Å—å"
fi

# –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞
echo ""
echo "=== –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ ==="
SUCCESS_COUNT=$(grep -c "‚úÖ" "${LATEST_LOG}")
ERROR_COUNT=$(grep -c "‚ùå" "${LATEST_LOG}")

echo "–£—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: ${SUCCESS_COUNT}"
echo "–û—à–∏–±–æ–∫: ${ERROR_COUNT}"

if [ ${ERROR_COUNT} -eq 0 ]; then
    echo "üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!"
elif [ ${ERROR_COUNT} -lt 3 ]; then
    echo "‚ö†Ô∏è  –ù–µ–±–æ–ª—å—à–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–æ –≤ —Ü–µ–ª–æ–º OK"
else
    echo "‚ùå –ú–ù–û–ì–û –û–®–ò–ë–û–ö - —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞"
fi

echo ""
echo "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–≥–æ –ª–æ–≥–∞:"
echo "cat ${LATEST_LOG}"
