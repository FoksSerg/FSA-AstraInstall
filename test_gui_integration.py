#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ GUI —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É astra_automation.AutomationGUI —Å –Ω–æ–≤—ã–º–∏ –∫–ª–∞—Å—Å–∞–º–∏
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–æ–¥—É–ª—é
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_gui_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ GUI —Å –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π"""
    print("=" * 60)
    print("–¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò GUI –° –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–û–ô –ê–†–•–ò–¢–ï–ö–¢–£–†–û–ô")
    print("=" * 60)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã
        import astra_automation
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–æ–≤ —É—Å–ø–µ—à–µ–Ω")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è astra_automation.AutomationGUI
        print("\n–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ astra_automation.AutomationGUI...")
        try:
            # –°–æ–∑–¥–∞–µ–º GUI –≤ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            gui = astra_automation.AutomationGUI(console_mode=True)
            print("‚úÖ astra_automation.AutomationGUI —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –Ω–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            if hasattr(gui, 'component_status_manager'):
                print("‚úÖ astra_automation.ComponentStatusManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            else:
                print("‚ùå astra_automation.ComponentStatusManager –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
            if hasattr(gui, 'universal_installer'):
                print("‚úÖ astra_automation.UniversalInstaller –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            else:
                print("‚ùå astra_automation.UniversalInstaller –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
            # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
            print("\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
            all_status = gui.component_status_manager.get_all_components_status()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç–∞—Ç—É—Å–æ–≤: {len(all_status)}")
            
            # –¢–µ—Å—Ç –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            print("\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º...")
            categories = {}
            for component_id, config in astra_automation.COMPONENTS_CONFIG.items():
                category = config['category']
                if category not in categories:
                    categories[category] = []
                categories[category].append(component_id)
            
            for category, components in categories.items():
                print(f"  {category}: {len(components)} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤")
            
            # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            print("\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
            test_components = ['astra_ide', 'wineprefix']
            validation = gui.component_status_manager.validate_dependencies(test_components)
            print(f"‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {validation['valid']}")
            
            # –¢–µ—Å—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
            print("\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏...")
            progress = gui.component_status_manager.get_installation_progress()
            print(f"‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress['progress_percent']:.1f}% ({progress['installed']}/{progress['total']})")
            
            print("\n" + "=" * 60)
            print("–í–°–ï –¢–ï–°–¢–´ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
            print("=" * 60)
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è GUI: {e}")
            import traceback
            traceback.print_exc()
            return False
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

def test_gui_components():
    """–¢–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ GUI"""
    print("\n" + "=" * 60)
    print("–¢–ï–°–¢ –ö–û–ú–ü–û–ù–ï–ù–¢–û–í GUI")
    print("=" * 60)
    
    try:
        import astra_automation
        
        # –°–æ–∑–¥–∞–µ–º GUI –≤ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ
        gui = astra_automation.AutomationGUI(console_mode=True)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–µ—Ç–æ–¥–æ–≤
        required_methods = [
            '_component_status_callback',
            '_update_wine_status',
            '_perform_wine_check',
            'run_wine_check'
        ]
        
        for method_name in required_methods:
            if hasattr(gui, method_name):
                print(f"‚úÖ –ú–µ—Ç–æ–¥ {method_name} –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"‚ùå –ú–µ—Ç–æ–¥ {method_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –¢–µ—Å—Ç callback –º–µ—Ç–æ–¥–∞
        print("\n–¢–µ—Å—Ç–∏—Ä—É–µ–º callback –º–µ—Ç–æ–¥...")
        gui._component_status_callback("UPDATE_COMPONENT:wine_astraregul")
        print("‚úÖ Callback –º–µ—Ç–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        print("\n" + "=" * 60)
        print("–¢–ï–°–¢–´ –ö–û–ú–ü–û–ù–ï–ù–¢–û–í GUI –ó–ê–í–ï–†–®–ï–ù–´!")
        print("=" * 60)
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("FSA-AstraInstall - –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ GUI —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π")
    print("–í–µ—Ä—Å–∏—è: 1.0")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
        success1 = test_gui_integration()
        success2 = test_gui_components()
        
        if success1 and success2:
            print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
            print("GUI —É—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤")
            return True
        else:
            print("\n‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
            return False
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ê–•: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
