#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤—Å–µ—Ö –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
"""

import ast
import sys

def test_all_embedded_modules():
    """–¢–µ—Å—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤—Å–µ—Ö –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π"""
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    import importlib.util
    spec = importlib.util.spec_from_file_location("astra_automation", "astra-automation.py")
    astra_automation = importlib.util.module_from_spec(spec)
    spec.loader.exec_module(astra_automation)
    
    # –°–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    modules = [
        ('repo_checker.py', astra_automation.get_embedded_repo_checker),
        ('system_stats.py', astra_automation.get_embedded_system_stats),
        ('interactive_handler.py', astra_automation.get_embedded_interactive_handler),
        ('system_updater.py', astra_automation.get_embedded_system_updater),
        ('gui_monitor.py', astra_automation.get_embedded_gui_monitor)
    ]
    
    all_passed = True
    
    for module_name, get_function in modules:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–æ–¥
            code = get_function()
            
            # –ü–∞—Ä—Å–∏–º –∫–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
            ast.parse(code)
            print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å %s –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω" % module_name)
            
        except SyntaxError as e:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ %s, —Å—Ç—Ä–æ–∫–∞ %d: %s" % (module_name, e.lineno, e.msg))
            print("   –¢–µ–∫—Å—Ç: %s" % e.text)
            all_passed = False
            
        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ %s: %s" % (module_name, str(e)))
            all_passed = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª JSON
    try:
        import json
        config_code = astra_automation.get_embedded_config()
        json.loads(config_code)
        print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å auto_responses.json –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ auto_responses.json: %s" % str(e))
        all_passed = False
    
    return all_passed

if __name__ == '__main__':
    success = test_all_embedded_modules()
    
    if success:
        print("\nüéâ –í—Å–µ –º–æ–¥—É–ª–∏ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞!")
    else:
        print("\nüí• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞!")
        sys.exit(1)
