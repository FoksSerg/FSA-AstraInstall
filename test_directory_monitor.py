#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ DirectoryMonitor
"""

import os
import tempfile
import shutil
import time
import sys

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã –∏–∑ astra-automation.py
try:
    import importlib.util
    spec = importlib.util.spec_from_file_location('astra_automation', 'astra-automation.py')
    astra_automation = importlib.util.module_from_spec(spec)
    spec.loader.exec_module(astra_automation)
    
    print("‚úÖ –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω")
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª–∞—Å—Å–æ–≤
    if hasattr(astra_automation, 'DirectoryMonitor'):
        print("‚úÖ –ö–ª–∞—Å—Å DirectoryMonitor –Ω–∞–π–¥–µ–Ω")
        DirectoryMonitor = astra_automation.DirectoryMonitor
    else:
        raise AttributeError("module 'astra_automation' has no attribute 'DirectoryMonitor'")
    
    if hasattr(astra_automation, 'DirectorySnapshot'):
        print("‚úÖ –ö–ª–∞—Å—Å DirectorySnapshot –Ω–∞–π–¥–µ–Ω")
        DirectorySnapshot = astra_automation.DirectorySnapshot
    else:
        raise AttributeError("module 'astra_automation' has no attribute 'DirectorySnapshot'")

except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    sys.exit(1)
except AttributeError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    sys.exit(1)

def test_directory_monitor():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ DirectoryMonitor"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DirectoryMonitor...")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_dir = tempfile.mkdtemp(prefix="test_monitor_")
    print(f"üìÅ –¢–µ—Å—Ç–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {test_dir}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä
        monitor = DirectoryMonitor()
        
        # –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
        test_file1 = os.path.join(test_dir, "file1.txt")
        test_file2 = os.path.join(test_dir, "file2.txt")
        test_subdir = os.path.join(test_dir, "subdir")
        
        with open(test_file1, 'w') as f:
            f.write("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ 1")
        
        with open(test_file2, 'w') as f:
            f.write("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ 2")
        
        os.makedirs(test_subdir)
        
        # –ù–∞—á–∏–Ω–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        print("\nüîç –ù–∞—á–∏–Ω–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...")
        monitor.start_monitoring(test_dir)
        
        # –î–µ–ª–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        print("\nüìù –í–Ω–æ—Å–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
        
        # –ò–∑–º–µ–Ω—è–µ–º —Ñ–∞–π–ª
        with open(test_file1, 'w') as f:
            f.write("–ò–∑–º–µ–Ω–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ 1")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
        test_file3 = os.path.join(test_dir, "file3.txt")
        with open(test_file3, 'w') as f:
            f.write("–ù–æ–≤—ã–π —Ñ–∞–π–ª")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        test_subdir2 = os.path.join(test_dir, "subdir2")
        os.makedirs(test_subdir2)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –≤ –Ω–æ–≤–æ–π –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        test_file4 = os.path.join(test_subdir2, "file4.txt")
        with open(test_file4, 'w') as f:
            f.write("–§–∞–π–ª –≤ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
        
        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
        os.remove(test_file2)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
        changes = monitor.check_changes(test_dir)
        
        if changes:
            print("üìä –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è:")
            formatted = monitor.format_changes(changes)
            print(formatted)
        else:
            print("‚ùå –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        print("\nüìä –ü–æ–ª–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å –Ω–∞—á–∞–ª–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:")
        total_changes = monitor.get_total_changes(test_dir)
        if total_changes:
            formatted_total = monitor.format_changes(total_changes)
            print(formatted_total)
        
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        shutil.rmtree(test_dir)
        print(f"üßπ –¢–µ—Å—Ç–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞: {test_dir}")

if __name__ == "__main__":
    test_directory_monitor()
